use crate::board::Board;

pub fn extreme_board() -> Board {
    let row_constraints = vec! [
        vec![35],
        vec![39],
        vec![2,2],
        vec![2,33,2],
        vec![2,35,2],
        vec![2,14,6,4,2],
        vec![2,14,6,3,2],
        vec![2,14,5,3,2],
        vec![2,14,4,4,2],
        vec![2,14,3,5,2],
        vec![2,7,6,3,6,2],
        vec![2,6,4,2,6,2],
        vec![2,5,1,1,7,2],
        vec![2,6,1,8,2],
        vec![2,6,1,9,2],
        vec![2,7,3,9,2],
        vec![2,7,4,9,2],
        vec![2,7,4,8,2],
        vec![2,7,5,1,8,2],
        vec![2,4,5,1,7,2],
        vec![2,2,6,2,6,2],
        vec![2,2,6,3,5,2],
        vec![2,2,6,3,5,2],
        vec![2,2,6,4,4,2],
        vec![2,5,5,5,3,2],
        vec![2,7,5,5,3,2],
        vec![2,7,5,6,4,2],
        vec![2,7,14,1,7,2],
        vec![2,7,12,9,2],
        vec![2,6,9,7,2],
        vec![2,5,4,7,2],
        vec![2,5,6,2],
        vec![2,6,4,4,7,2],
        vec![2,7,6,5,8,2],
        vec![2,14,16,2],
        vec![2,15,16,2],
        vec![2,15,16,2],
        vec![2,33,2],
        vec![2,3],
        vec![39],
        vec![35],
    ];
    let col_constraints = vec! [
        vec![35],
        vec![39],
        vec![2,2],
        vec![2,33,2],
        vec![2,35,2],
        vec![2,17,14,2],
        vec![2,17,14,2],
        vec![2,16,14,2],
        vec![2,9,6,5,6,2],
        vec![2,8,4,4,5,2],
        vec![2,7,4,2],
        vec![2,8,4,5,2],
        vec![2,8,9,5,2],
        vec![2,9,12,6,2],
        vec![2,9,14,6,2],
        vec![2,9,15,6,2],
        vec![2,27,6,2],
        vec![2,2,3,3,2],
        vec![2,2,4,1,2],
        vec![2,2,4,1,2],
        vec![2,2,4,1,2],
        vec![2,2,4,1,2],
        vec![2,2,3,4,2],
        vec![2,10,12,6,2],
        vec![2,9,9,6,2],
        vec![2,8,8,6,2],
        vec![2,6,5,6,2],
        vec![2,5,3,5,2],
        vec![2,4,1,4,2],
        vec![2,2,3,2,4,2],
        vec![2,2,6,1,5,2],
        vec![2,2,8,4,6,2],
        vec![2,2,11,11,2],
        vec![2,2,14,11,2],
        vec![2,3,16,12,2],
        vec![2,35,2],
        vec![2,35,2],
        vec![2,33,2],
        vec![2,2],
        vec![39],
        vec![36],
    ];

    Board::new(row_constraints, col_constraints, vec![(0, 0), (0, 1), (0, 2)])
}

pub fn hard_board() -> Board {
    let row_constraints = vec! [
        vec![1],
        vec![3],
        vec![3],
        vec![5],
        vec![5],
        vec![9],
        vec![5, 5],
        vec![6, 6],
        vec![5, 5],
        vec![9],
        vec![5],
        vec![5],
        vec![3],
        vec![3],
        vec![1],
    ];
    let col_constraints = vec! [
        vec![1],
        vec![3],
        vec![3],
        vec![5],
        vec![5],
        vec![9],
        vec![5, 5],
        vec![6, 6],
        vec![5, 5],
        vec![9],
        vec![5],
        vec![5],
        vec![3],
        vec![3],
        vec![1],
    ];

    Board::new(row_constraints, col_constraints, vec![])
}

pub fn easy_board() -> Board {
    let row_constraints = vec! [
        vec![1, 1],
        vec![5],
        vec![2, 2],
        vec![3],
        vec![1],
    ];
    let col_constraints = vec! [
        vec![2],
        vec![4],
        vec![1, 2],
        vec![4],
        vec![2],
    ];

    Board::new(row_constraints, col_constraints, vec![])
}
